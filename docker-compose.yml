version: '3.8'

services:
  web:
    build:
      context: .
    command: sh -c "python websocket_server.py & python manage.py runserver 0.0.0.0:8000"
    volumes:
      - .:/code
    ports:
      - "8000:8000"
      - "8001:8001"
    env_file:
      - .env
    depends_on:
      - db
      - redis
      - celery
      - celery-beat

  webpack:
    build:
      context: .
      dockerfile: Dockerfile.webpack
    command: sh -c "npm install && FORCE_COLOR=1 npm run watch"
    stdin_open: true
    tty: true
    volumes:
      - .:/code
    depends_on:
      - web
    environment:
      - NODE_ENV=development
      - FORCE_COLOR=1

  db:
    image: postgres:14-alpine
    volumes:
      - postgres_djangox:/var/lib/postgresql/data/
    environment:
      - POSTGRES_DB=${SQL_DATABASE}
      - POSTGRES_USER=${SQL_USER}
      - POSTGRES_PASSWORD=${SQL_PASSWORD}
    ports:
      - "${SQL_PORT}:${SQL_PORT}"
    command: -p ${SQL_PORT}
    env_file:
      - .env

  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    command:
      - /bin/sh
      - -c
      - redis-server --requirepass "$${REDIS_PASSWORD:?REDIS_PASSWORD variable is not set}"
    env_file:
      - .env

  celery:
    build:
      context: .
    command: celery -A django_project worker --loglevel=info
    volumes:
      - .:/code
    env_file:
      - .env
    depends_on:
      - redis
      - db

  celery-beat:
    build:
      context: .
    command: celery -A django_project beat --loglevel=info --scheduler django_celery_beat.schedulers:DatabaseScheduler
    volumes:
      - .:/code
    env_file:
      - .env
    depends_on:
      - redis
      - db
      - celery

volumes:
  postgres_djangox:
  redis_data:
