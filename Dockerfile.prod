# Build stage
FROM python:3.12.2-slim-bookworm AS builder

# Set build-time environment variables
ENV PYTHONDONTWRITEBYTECODE=1 \
    PYTHONUNBUFFERED=1 \
    DEBIAN_FRONTEND=noninteractive \
    PIP_NO_CACHE_DIR=1 \
    PIP_DISABLE_PIP_VERSION_CHECK=1

WORKDIR /code

# Install build dependencies
RUN apt-get update && apt-get install -y --no-install-recommends \
    build-essential \
    libpq-dev \
    && rm -rf /var/lib/apt/lists/* \
    && apt-get clean

# Install Python dependencies
COPY requirements.txt .
RUN pip wheel --no-cache-dir --no-deps --wheel-dir /code/wheels -r requirements.txt

# Final stage
FROM python:3.12.2-slim-bookworm

# Create non-root user
ARG USER=appuser
ARG UID=10001
RUN adduser \
    --disabled-password \
    --gecos "" \
    --home "/nonexistent" \
    --shell "/sbin/nologin" \
    --no-create-home \
    --uid "${UID}" \
    "${USER}"

# Set environment variables
ENV PYTHONDONTWRITEBYTECODE=1 \
    PYTHONUNBUFFERED=1 \
    DEBIAN_FRONTEND=noninteractive \
    PIP_NO_CACHE_DIR=1 \
    PIP_DISABLE_PIP_VERSION_CHECK=1 \
    PATH="/home/${USER}/.local/bin:${PATH}"

WORKDIR /code

# Install runtime dependencies
RUN apt-get update && apt-get install -y --no-install-recommends \
    python3-pip \
    libpango-1.0-0 \
    libpangoft2-1.0-0 \
    libharfbuzz0b \
    # netcat-traditional \
    postgresql-client \
    fontconfig \
    && rm -rf /var/lib/apt/lists/* \
    && apt-get clean \
    && apt-get autoremove -y \
    && mkdir -p /var/cache/fontconfig \
    && chmod 777 /var/cache/fontconfig

# Copy wheels from builder and install
COPY --from=builder /code/wheels /wheels
COPY requirements.txt .
RUN pip install --no-cache-dir /wheels/* \
    && rm -rf /wheels

# Copy application code
COPY --chown=${USER}:${USER} . .

# Set proper permissions
RUN chmod +x /code/entrypoint.prod.sh && \
    chmod +x /code/entrypoint.celery.sh && \
    chown -R ${USER}:${USER} /code

# Expose port
EXPOSE 8000
# Use shell form cmd
ENTRYPOINT []
