version: '3.9'

services:
  web:
    build:
        context: .
        dockerfile: Dockerfile.prod
    expose:
      - 8000
    volumes:
      # - static_volume:/code/static
      - static_volume:/code/staticfiles
      - media_volume:/code/media
    env_file:
      - .env
    depends_on:
      - db
      - redis

  db:
    image: postgres:14
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    environment:
      - POSTGRES_DB=${SQL_DATABASE}
      - POSTGRES_USER=${SQL_USER}
      - POSTGRES_PASSWORD=${SQL_PASSWORD}

  redis:
    image: redis:7-alpine
    command: redis-server --requirepass ${REDIS_PASSWORD}
    volumes:
      - redis_data:/data
    expose:
      - 6379

  celery:
    build:
      context: .
      dockerfile: Dockerfile.prod
    command: celery -A django_project worker --loglevel=info --concurrency=2 --max-tasks-per-child=500 --optimization=fair
    volumes:
      - .:/code
    env_file: .env
    depends_on:
      - redis
      - db
    deploy:
      restart_policy:
        condition: on-failure
        max_attempts: 3

  celery-beat:
    build:
      context: .
      dockerfile: Dockerfile.prod
    command: celery -A django_project beat --loglevel=info --scheduler django_celery_beat.schedulers:DatabaseScheduler
    volumes:
      - .:/code
    env_file: .env
    depends_on:
      - redis
      - db
      - celery
    deploy:
      restart_policy:
        condition: on-failure
        max_attempts: 3

  caddy:
    image: caddy:2
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./Caddyfile:/etc/caddy/Caddyfile
      - caddy_data:/data
      - caddy_config:/config
    depends_on:
      - web

volumes:
  postgres_data:
  Caddyfile:
  caddy_data:
  caddy_config:
  static_volume:
  media_volume:
  redis_data:
