version: '3.9'

services:
  web:
    build:
        context: .
        dockerfile: Dockerfile.prod
    expose:
      - 8000
    volumes:
      # - static_volume:/code/static
      - static_volume:/code/staticfiles
      - media_volume:/code/media
    env_file: .env.prod
    depends_on:
      - db
      - redis

  db:
    image: postgres:13-alpine
    volumes:
      - postgres_djangox:/var/lib/postgresql/data/
    environment:
      - POSTGRES_DB=${SQL_DATABASE}
      - POSTGRES_USER=${SQL_USER}
      - POSTGRES_PASSWORD=${SQL_PASSWORD}
    ports:
      - "${SQL_PORT}:${SQL_PORT}"
    command: -p ${SQL_PORT}
    env_file:
      - .env.prod

  redis:
    image: redis:7-alpine
    env_file: .env.prod
    command: redis-server --requirepass "${REDIS_PASSWORD}"
    volumes:
      - redis_data:/data
    expose:
      - 6379

  celery:
    build:
      context: .
      dockerfile: Dockerfile.prod
    command: celery -A django_project worker --loglevel=info
    volumes:
      - .:/code
    env_file: .env.prod
    depends_on:
      - redis
      - db

  celery-beat:
    build:
      context: .
      dockerfile: Dockerfile.prod
    command: celery -A django_project beat --loglevel=info --scheduler django_celery_beat.schedulers:DatabaseScheduler
    volumes:
      - .:/code
    env_file: .env.prod
    depends_on:
      - redis
      - db
      - celery

  caddy:
    image: caddy:2
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./Caddyfile:/etc/caddy/Caddyfile
      - caddy_data:/data
      - caddy_config:/config
    depends_on:
      - web

volumes:
  postgres_data:
  Caddyfile:
  caddy_data:
  caddy_config:
  static_volume:
  media_volume:
  redis_data:
