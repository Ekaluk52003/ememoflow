version: '3.9'

services:
  web:
    build:
        context: .
        dockerfile: Dockerfile.prod
    command: sh -c "./entrypoint.prod.sh && gunicorn django_project.wsgi:application --bind 0.0.0.0:8000 --workers 3"
    volumes:
      # - static_volume:/code/static
      - static_volume:/code/staticfiles
      - media_volume:/code/media
    ports:
      - "8000:8000"
    depends_on:
      - db
    restart: always


  db:
    image: postgres:14
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    environment:
      - POSTGRES_DB=${SQL_DATABASE}
      - POSTGRES_USER=${SQL_USER}
      - POSTGRES_PASSWORD=${SQL_PASSWORD}
    env_file:
      - .env
    ports:
      - "5432:5432"

  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data    
    command:
      - /bin/sh
      - -c
      - redis-server --requirepass "$${REDIS_PASSWORD:?REDIS_PASSWORD variable is not set}"
    env_file:
      - .env

  celery:
    build:
      context: .
      dockerfile: Dockerfile.prod
    entrypoint: ["/code/entrypoint.celery.sh"]
    command: celery -A django_project worker --loglevel=info
    volumes:
      - .:/code
    env_file:
      - .env
    depends_on:
      - db
      - redis
    restart: always
    

  celery-beat:
    build:
      context: .
      dockerfile: Dockerfile.prod
    entrypoint: ["/code/entrypoint.celery.sh"]
    command: celery -A django_project beat --loglevel=info --scheduler django_celery_beat.schedulers:DatabaseScheduler
    volumes:
      - .:/code
    env_file:
      - .env
    depends_on:
      - db
      - redis
    restart: always

  caddy:
    image: caddy:2
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./Caddyfile:/etc/caddy/Caddyfile
      - caddy_data:/data
      - caddy_config:/config
    depends_on:
      - web

volumes:
  postgres_data:
  caddy_data:
  caddy_config:
  static_volume:
  media_volume:
  redis_data:
